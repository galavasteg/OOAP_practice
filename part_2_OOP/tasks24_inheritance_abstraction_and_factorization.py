"""
----------------------- TASK 24 -----------------------

    Приведите словесные примеры применения абстрагирования и факторизации.

[Оба примера из личного опыта.]

Абстрагирование.
Разрабатывал воркера:
    1. слушает очередь,
    2. получает ИД задачи,
    3. забирает ее из БД,
    4. выполняет работу на основе полученных из БД параметров,
    5. шлет уведомление пользователю.
Загвоздка была в п.5: при формировании канала, в который нужно послать уведомление, участвовали параметры задачи.
А если воркер не имеет параметров? А если канал зависит от результата или он динамический?
Постепенно пришло понимание, что для разных узкоспециализированных воркеров нужен свой процесс уведомлений или наличие
подключения к чему-то еще помимо БД.
Так получился абстрактный воркер, "умеющий" все и ничего. Наследник задавал (или нет) класс процессора уведомлений.
Также он специализировал абстрактного воркера в части взаимодействия с внешними системами, также указывая
соответствующий класс при конфигураци. Наследник в итоге реализовывал только п.4.

Факторизация.
В начале своей карьеры для сервиса с меняющимся числом поднятых копий и очередями писал интеграциоонные тесты на Python,
которые выходили очень большими. В них было тяжело ориентироваться, поэтому решил у разных тестов находить общие куски
кода и выносить в общего предка. Месяц поддержки таких тестов привел к тому, что организовался класс-предок на 500 строк
кода и около 10 тестов еще на 100-200 строк каждый. Кто-то посмотрел на это и сказал, что я просто воссоздал часть
функциональности unittest.TestCase (не знал еще о нем) с кучей всякого инфраструктурного кода...
Надолго перестал писать интеграционные тесты =)

"""
